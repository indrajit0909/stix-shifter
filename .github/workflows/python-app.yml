# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Stix Shifter

on: [workflow_dispatch]
  # pull_request:
    # branches: [ develop ]

jobs:
  UnitTest:
  
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: jannekem/run-python-script-action@v1
      with:
        script: |
          import os
          print("Directory contents to test:")
          MODULES_DIR = 'stix_shifter_modules'
          modules_to_test = []
          for module in os.listdir(MODULES_DIR):
              if (os.path.isdir(os.path.join(MODULES_DIR,module)) and not module.startswith('_')):
                  if not os.path.isfile(os.path.join(MODULES_DIR, module, 'SKIP.ME')):
                      print(module)
                      modules_to_test.append(os.path.join(MODULES_DIR,module))
          set_env("TIS_MODULES", " ".join(modules_to_test))
    - name: Install dependencies
      run: |
        python generate_requirements.py
        pip install --upgrade pip setuptools wheel
        pip install -r requirements-dev.txt
    - name: Lint with flake8
      run: |
        pip install --upgrade flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics
        # exit-zero treats all errors as warnings.  The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run unit tests with pytest
      run: |
        pytest ${{ env.TIS_MODULES }}
#     - name: Run python script
#       if: ${{ failure() }}
#       run: |
#         python3 ./sent_mail.py
